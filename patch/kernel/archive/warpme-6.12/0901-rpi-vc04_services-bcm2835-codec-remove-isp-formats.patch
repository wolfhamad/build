diff --speed-large-files --no-dereference --minimal -Naur linux-6.8-rc5/drivers/staging/vc04_services/bcm2835-codec/bcm2835-v4l2-codec.c linux-6.8-rc5/drivers/staging/vc04_services/bcm2835-codec/bcm2835-v4l2-codec.c
--- linux-6.8-rc5/drivers/staging/vc04_services/bcm2835-codec/bcm2835-v4l2-codec.c	2024-02-25 11:43:48.869448376 +0100
+++ linux-6.8-rc5/drivers/staging/vc04_services/bcm2835-codec/bcm2835-v4l2-codec.c	2024-02-25 11:34:03.506127632 +0100
@@ -302,239 +302,6 @@
 		.size_multiplier_x2	= 2,
 		.is_bayer		= true,
 	}, {
-		/* 10 bit */
-		.fourcc			= V4L2_PIX_FMT_SRGGB10P,
-		.depth			= 10,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SRGGB10P,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
-		.fourcc			= V4L2_PIX_FMT_SBGGR10P,
-		.depth			= 10,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SBGGR10P,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
-		.fourcc			= V4L2_PIX_FMT_SGRBG10P,
-		.depth			= 10,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SGRBG10P,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
-		.fourcc			= V4L2_PIX_FMT_SGBRG10P,
-		.depth			= 10,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SGBRG10P,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
-		/* 12 bit */
-		.fourcc			= V4L2_PIX_FMT_SRGGB12P,
-		.depth			= 12,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SRGGB12P,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
-		.fourcc			= V4L2_PIX_FMT_SBGGR12P,
-		.depth			= 12,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SBGGR12P,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
-		.fourcc			= V4L2_PIX_FMT_SGRBG12P,
-		.depth			= 12,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SGRBG12P,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
-		.fourcc			= V4L2_PIX_FMT_SGBRG12P,
-		.depth			= 12,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SGBRG12P,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
-		/* 14 bit */
-		.fourcc			= V4L2_PIX_FMT_SRGGB14P,
-		.depth			= 14,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SRGGB14P,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
-		.fourcc			= V4L2_PIX_FMT_SBGGR14P,
-		.depth			= 14,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SBGGR14P,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-
-	}, {
-		.fourcc			= V4L2_PIX_FMT_SGRBG14P,
-		.depth			= 14,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SGRBG14P,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
-		.fourcc			= V4L2_PIX_FMT_SGBRG14P,
-		.depth			= 14,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SGBRG14P,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
-		/* 16 bit */
-		.fourcc			= V4L2_PIX_FMT_SRGGB16,
-		.depth			= 16,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SRGGB16,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
-		.fourcc			= V4L2_PIX_FMT_SBGGR16,
-		.depth			= 16,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SBGGR16,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
-		.fourcc			= V4L2_PIX_FMT_SGRBG16,
-		.depth			= 16,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SGRBG16,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
-		.fourcc			= V4L2_PIX_FMT_SGBRG16,
-		.depth			= 16,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SGBRG16,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
-		/* Bayer formats unpacked to 16bpp */
-		/* 10 bit */
-		.fourcc			= V4L2_PIX_FMT_SRGGB10,
-		.depth			= 16,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SRGGB10,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
-		.fourcc			= V4L2_PIX_FMT_SBGGR10,
-		.depth			= 16,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SBGGR10,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
-		.fourcc			= V4L2_PIX_FMT_SGRBG10,
-		.depth			= 16,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SGRBG10,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
-		.fourcc			= V4L2_PIX_FMT_SGBRG10,
-		.depth			= 16,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SGBRG10,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
-		/* 12 bit */
-		.fourcc			= V4L2_PIX_FMT_SRGGB12,
-		.depth			= 16,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SRGGB12,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
-		.fourcc			= V4L2_PIX_FMT_SBGGR12,
-		.depth			= 16,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SBGGR12,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
-		.fourcc			= V4L2_PIX_FMT_SGRBG12,
-		.depth			= 16,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SGRBG12,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
-		.fourcc			= V4L2_PIX_FMT_SGBRG12,
-		.depth			= 16,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SGBRG12,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
-		/* 14 bit */
-		.fourcc			= V4L2_PIX_FMT_SRGGB14,
-		.depth			= 16,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SRGGB14,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
-		.fourcc			= V4L2_PIX_FMT_SBGGR14,
-		.depth			= 16,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SBGGR14,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
-		.fourcc			= V4L2_PIX_FMT_SGRBG14,
-		.depth			= 16,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SGRBG14,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
-		.fourcc			= V4L2_PIX_FMT_SGBRG14,
-		.depth			= 16,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_BAYER_SGBRG14,
-		.size_multiplier_x2	= 2,
-		.is_bayer		= true,
-	}, {
 		/* Monochrome MIPI formats */
 		/* 8 bit */
 		.fourcc			= V4L2_PIX_FMT_GREY,
@@ -576,30 +343,6 @@
 		.mmal_fmt		= MMAL_ENCODING_Y16,
 		.size_multiplier_x2	= 2,
 	}, {
-		/* 10 bit as 16bpp */
-		.fourcc			= V4L2_PIX_FMT_Y10,
-		.depth			= 16,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_Y10,
-		.size_multiplier_x2	= 2,
-	}, {
-		/* 12 bit as 16bpp */
-		.fourcc			= V4L2_PIX_FMT_Y12,
-		.depth			= 16,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_Y12,
-		.size_multiplier_x2	= 2,
-	}, {
-		/* 14 bit as 16bpp */
-		.fourcc			= V4L2_PIX_FMT_Y14,
-		.depth			= 16,
-		.bytesperline_align	= { 32, 32, 32, 32, 32 },
-		.flags			= 0,
-		.mmal_fmt		= MMAL_ENCODING_Y14,
-		.size_multiplier_x2	= 2,
-	}, {
 		/* Compressed formats */
 		.fourcc			= V4L2_PIX_FMT_H264,
 		.depth			= 0,

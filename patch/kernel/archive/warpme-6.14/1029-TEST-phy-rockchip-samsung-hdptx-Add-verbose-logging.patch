From 38bdc0ffd8d859a2652379b900f4539efedfb220 Mon Sep 17 00:00:00 2001
From: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
Date: Fri, 19 Jan 2024 19:51:32 +0200
Subject: [PATCH 29/37] [TEST] phy: rockchip: samsung-hdptx: Add verbose
 logging

---
 .../phy/rockchip/phy-rockchip-samsung-hdptx.c | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

diff --git a/drivers/phy/rockchip/phy-rockchip-samsung-hdptx.c b/drivers/phy/rockchip/phy-rockchip-samsung-hdptx.c
index 6887642fc988..c345cde5d8f9 100644
--- a/drivers/phy/rockchip/phy-rockchip-samsung-hdptx.c
+++ b/drivers/phy/rockchip/phy-rockchip-samsung-hdptx.c
@@ -647,6 +647,8 @@ static void rk_hdptx_phy_disable(struct rk_hdptx_phy *hdptx)
 {
 	u32 val;
 
+	dev_dbg(hdptx->dev, "PHY disable\n");
+
 	reset_control_assert(hdptx->rsts[RST_APB].rstc);
 	usleep_range(20, 30);
 	reset_control_deassert(hdptx->rsts[RST_APB].rstc);
@@ -746,6 +748,8 @@ static int rk_hdptx_ropll_tmds_cmn_config(struct rk_hdptx_phy *hdptx,
 	struct ropll_config rc = {0};
 	int i;
 
+	dev_dbg(hdptx->dev, "tmds_cmn_config rate=%lu bpc=%u\n", rate, hdptx->bpc);
+
 	hdptx->rate = rate;
 
 	for (i = 0; i < ARRAY_SIZE(ropll_tmds_cfg); i++)
@@ -921,6 +925,8 @@ static int rk_hdptx_phy_power_off(struct phy *phy)
 {
 	struct rk_hdptx_phy *hdptx = phy_get_drvdata(phy);
 
+	dev_dbg(hdptx->dev, "power_off\n");
+
 	return rk_hdptx_phy_consumer_put(hdptx, false);
 }
 
@@ -943,6 +949,9 @@ static int rk_hdptx_phy_configure(struct phy *phy,
 			 opts->hdmi.bpc);
 	};
 
+	dev_dbg(hdptx->dev, "%s tmds_rate=%lu bpc=%u\n", __func__,
+		hdptx->tmds_char_rate, hdptx->bpc);
+
 	return 0;
 }
 
@@ -962,6 +971,8 @@ static int rk_hdptx_phy_clk_prepare(struct clk_hw *hw)
 {
 	struct rk_hdptx_phy *hdptx = to_rk_hdptx_phy(hw);
 
+	dev_dbg(hdptx->dev, "clk_prepare\n");
+
 	return rk_hdptx_phy_consumer_get(hdptx);
 }
 
@@ -969,6 +980,8 @@ static void rk_hdptx_phy_clk_unprepare(struct clk_hw *hw)
 {
 	struct rk_hdptx_phy *hdptx = to_rk_hdptx_phy(hw);
 
+	dev_dbg(hdptx->dev, "clk_unprepare\n");
+
 	rk_hdptx_phy_consumer_put(hdptx, true);
 }
 
@@ -1012,6 +1025,8 @@ static int rk_hdptx_phy_clk_set_rate(struct clk_hw *hw, unsigned long rate,
 		dev_dbg(hdptx->dev, "Replaced clk_set_rate=%lu with tmds_char_rate=%lu\n",
 			rate, hdptx->tmds_char_rate);
 		rate = hdptx->tmds_char_rate;
+	} else {
+		dev_dbg(hdptx->dev, "clk_set_rate rate=%lu\n", rate);
 	}
 
 	return rk_hdptx_ropll_tmds_cmn_config(hdptx, rate);
@@ -1058,6 +1073,8 @@ static int rk_hdptx_phy_runtime_suspend(struct device *dev)
 {
 	struct rk_hdptx_phy *hdptx = dev_get_drvdata(dev);
 
+	dev_dbg(hdptx->dev, "suspend\n");
+
 	clk_bulk_disable_unprepare(hdptx->nr_clks, hdptx->clks);
 
 	return 0;
@@ -1068,6 +1085,8 @@ static int rk_hdptx_phy_runtime_resume(struct device *dev)
 	struct rk_hdptx_phy *hdptx = dev_get_drvdata(dev);
 	int ret;
 
+	dev_dbg(hdptx->dev, "resume\n");
+
 	ret = clk_bulk_prepare_enable(hdptx->nr_clks, hdptx->clks);
 	if (ret)
 		dev_err(hdptx->dev, "Failed to enable clocks: %d\n", ret);
-- 
2.46.0

